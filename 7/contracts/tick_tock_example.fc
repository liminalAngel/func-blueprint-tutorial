#include "imports/stdlib.fc";

cell load_data() inline {
    slice ds = get_data().begin_parse();

    return ds~load_dict();
}

() save_data(cell data_dict) impure inline {
    set_data(
        begin_cell()
            .store_dict(data_dict)
        .end_cell()
    );
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {

}

() run_ticktock() impure {
    cell data_dict = load_data();

    (int time, slice data, int f) = udict_get_min?(data_dict, 64);

    while (f) {
        if (time + 7776000 < now()) {
            (data_dict, f) = udict_delete?(data_dict, 64, time);
        }

        (time, data, f) = udict_get_next?(data_dict, 64, time);
    }

    return save_data(data_dict);
}